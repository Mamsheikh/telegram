// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String                   @id @default(cuid())
  name          String?
  email         String?                  @unique
  emailVerified DateTime?
  image         String?
  username      String?                  @unique
  accounts      Account[]
  sessions      Session[]
  conversations ConvesationParticipant[]
  messages      Message[]
}

model Conversation {
  id               String                   @id @default(cuid())
  conversationType ConversationType
  channelName      String?
  groupName        String?
  conversationImg  String?
  latestMessageId  String?                  @unique
  latestMessage    Message?                 @relation(name: "latestConversationMessage", fields: [latestMessageId], references: [id])
  createdAt        DateTime                 @default(now())
  updatedAt        DateTime                 @updatedAt
  participants     ConvesationParticipant[]
  messages         Message[]
}

model ConvesationParticipant {
  id                 String       @id @default(cuid())
  userId             String
  user               User         @relation(fields: [userId], references: [id])
  conversationId     String
  conversation       Conversation @relation(fields: [conversationId], references: [id])
  unSeenMessageCount Int
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
}

model Message {
  id             String        @id @default(cuid())
  body           String
  coversation    Conversation  @relation(fields: [conversationId], references: [id])
  sender         User          @relation(fields: [senderId], references: [id])
  conversationId String
  senderId       String
  isLatestIn     Conversation? @relation(name: "latestConversationMessage")
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

enum ConversationType {
  GROUP
  CHANNEL
  DM
}
